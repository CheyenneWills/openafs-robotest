---
dependency:
  name: galaxy
driver:
  name: delegated
  provider:
    name: libvirt
  options:
    connection: local
    host: localhost
    loglevel: info
    python_interpreter: /usr/bin/python3
platforms:
  - name: m-devel-01
    template: "${AFS_IMAGE:-generic-centos-7}"
    groups:
      - afs_builders
provisioner:
  name: ansible
  env:
    ANSIBLE_VERBOSITY: 1
    ANSIBLE_STDOUT_CALLBACK: yaml
  playbooks:
    cleanup: ../../../playbooks/drivers/delegated/cleanup.yml
    create: ../../../playbooks/drivers/delegated/create.yml
    destroy: ../../../playbooks/drivers/delegated/destroy.yml
    prepare: ../../../playbooks/drivers/delegated/prepare.yml
  inventory:
    group_vars:
      all:
        afs_prep_update_kernel: "${AFS_PREP_UPDATE_KERNEL:-yes}"
        afs_build: "${AFS_BUILD:-packages}"
        afs_source: "${AFS_SOURCE:-~/openafs}"
        afs_configure_file: "${AFS_CONFIGURE_FILE}"
        afs_bdist_style: "${AFS_BDIST_STYLE:-modern}"
        afs_bdist_name: "${AFS_BDIST_NAME:-bdist}"
        afs_git_repo: "${AFS_GIT_REPO:-git://git.openafs.org/openafs.git}"
        afs_git_version: "${AFS_GIT_VERSION:-master}"
        afs_builds: "${AFS_BUILDS:-~/.cache/ansible-openafs/builds}"
verifier:
  name: ansible
scenario:
  create_sequence:
    - create
    - prepare
  check_sequence:
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - create
    - prepare
    - converge
  destroy_sequence:
    - cleanup
    - destroy
  test_sequence:
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - verify
    - cleanup
    - destroy
