---
- import_playbook: playbooks/preamble.yml

- name: Build packages
  hosts: afs_builders
  collections:
    - openafs_contrib.openafs
  tasks:
    - import_role:
        name: openafs_devel

    - set_fact:
        afs_source: '~/openafs'
      when: afs_source is undefined

    - name: Checkout source
      git:
        repo: "{{ afs_git_repo | d('git@git.openafs.org/openafs.git') }}"
        version: "{{ afs_git_version | d('master') }}"
        dest: "{{ afs_source }}"

    - name: Determine version string
      command:
        cmd: build-tools/git-version .
        chdir: "{{ afs_source }}"
      changed_when: false
      register: git_version

    - set_fact:
        afs_version: "{{ git_version.stdout | replace('-', '_') }}"

    - name: Autoconf
      command:
        cmd: ./regen.sh
        chdir: "{{ afs_source }}"

    - name: Generate makefile
      command:
        cmd: ./configure --disable-kernel-module
        chdir: "{{ afs_source }}"

    - name: Create source RPM
      command:
        cmd: make dist srpm
        chdir: "{{ afs_source }}"

    - name: Create rpmbuild workspace
      file:
        state: directory
        path: "{{ afs_source }}/packages/rpmbuild"
      register: mkdir_results

    - name: Set build facts
      set_fact:
        workspace: "{{ mkdir_results.path }}"
        dist: "{{ ansible_distribution | replace(' ', '_') | lower + ansible_distribution_major_version }}"
        arch: "{{ ansible_architecture }}"

    - name: Build RPMs
      shell:
        cmd: rpmbuild --rebuild --define "_topdir {{ workspace }}" packages/openafs-*.src.rpm
        chdir: "{{ afs_source }}"
      register: rpmbuild_results

    - debug:
        msg: "{{ rpmbuild_results.stdout_lines[-20:] }}"

    - name: Create archive
      archive:
        path: "{{ workspace }}/RPMS/{{ ansible_architecture }}/*.rpm"
        dest: "openafs-{{ afs_version }}-{{ dist }}-{{ arch }}.rpms.tar.gz"
        format: gz

    - name: Download
      fetch:
        flat: yes
        src: "openafs-{{ afs_version }}-{{ dist }}-{{ arch }}.rpms.tar.gz"
        dest: "{{ afs_builds }}/"
      register: fetch_results

    - name: Downloaded
      debug:
        msg: "{{ fetch_results.dest }}"
