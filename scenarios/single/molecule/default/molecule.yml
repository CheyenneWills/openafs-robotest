---
dependency:
  name: galaxy
driver:
  name: vagrant
platforms:
  - name: m-afs01
    box: "${AFS_BOX:-generic/centos7}"
    template: "${AFS_TEMPLATE:-generic-centos-7}"
    groups:
      - afs_admin
      - afs_clients
      - afs_databases
      - afs_fileservers
      - afs_kdcs
      - afs_test
provisioner:
  name: ansible
  env:
    ANSIBLE_VERBOSITY: 0
    ANSIBLE_STDOUT_CALLBACK: "yaml"
    # condensed output
    #ANSIBLE_STDOUT_CALLBACK: "unixy"
    #ANSIBLE_DISPLAY_SKIPPED_HOSTS: "no"
    #ANSIBLE_DISPLAY_OK_HOSTS: "no"
  inventory:
    group_vars:
      all:
        # Image preparation
        afs_prep_update_kernel: "${AFS_PREP_UPDATE_KERNEL:-yes}"
        afs_prep_ssh_keys: "${AFS_PREP_SSH_KEYS:-~/.ssh}"
        afs_prep_rewrite_etc_hosts: "${AFS_PREP_REWRITE_ETC_HOSTS:-no}"
        afs_prep_selinux_mode: "${AFS_PREP_SELINUX_MODE:-permissive}"
        # Cell setup
        afs_realm: "${AFS_REALM:-EXAMPLE.COM}"
        afs_cell: "${AFS_CELL:-example.com}"
        afs_builds: "${AFS_BUILDS:-~/.cache/ansible-openafs/builds}"
        afs_git_repo: "${AFS_GIT_REPO:-git://git.openafs.org/openafs.git}"
        afs_git_version: "${AFS_GIT_VERSION:-master}"
        afs_install_archive: "${AFS_INSTALL_ARCHIVE}"
        afs_install_method: "${AFS_INSTALL_METHOD:-managed}"
        afs_module_install_method: "${AFS_MODULE_INSTALL_METHOD:-dkms}"
        afs_bdist_name: "${AFS_BDIST_NAME:-bdist}"
        afs_pseudo_partitions: ['a', 'b']
        # Molecule environment
        afs_cell_files: "${MOLECULE_EPHEMERAL_DIRECTORY}"
        afs_csdb_file: "${MOLECULE_EPHEMERAL_DIRECTORY}/csdb.yaml"
        # Test variables
        afs_robotest_fileservers: "m-afs01"
verifier:
  name: robotframework
  group: afs_test
  libraries:
    - pyyaml
    - robotframework-openafslibrary
  test_data:
    - ${MOLECULE_SCENARIO_DIRECTORY}/tests
  resources:
    - ${MOLECULE_SCENARIO_DIRECTORY}/templates/openafs-robotest.yml.j2
  options:
    exclude:
      - bug
      - slow
      - rogue-avoidance
      - requires-multi-fs
    loglevel: INFO
    runemptysuite: true
    variablefile: openafs-robotest.yml
  data_sources:
    - tests
scenario:
  create_sequence:
    - create
    - prepare
  check_sequence:
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - create
    - prepare
    - converge
  destroy_sequence:
    - cleanup
    - destroy
  test_sequence:
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - verify
    - cleanup
    - destroy
