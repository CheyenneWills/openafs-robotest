{% raw -%}
---
# Realm
KRB_REALM: '{{ afs_realm }}'

# Cell
AFS_CELL: '{{ afs_cell }}'
AFS_USER: 'user1'
AFS_ADMIN: 'admin'
AFS_AKIMPERSONATE: False
AFS_ADMIN_PASSWORD: "{{ lookup('password', afs_cell_files+'/afs_admin_password chars=ascii_letters,digits,hexdigits length=15') }}"
AFS_FILESERVERS: '{{ afs_robotest_fileservers }}'

# Client info
PAG_ONEGROUP: True

# OpenAFS installation paths
AKLOG: "{{ ansible_local.openafs.bins['aklog'] }}"
BOS: "{{ ansible_local.openafs.bins['bos'] }}"
FS: "{{ ansible_local.openafs.bins['fs'] }}"
KLOG_KRB5:  "{{ ansible_local.openafs.bins['klog.krb5'] }}"
PAGSH: "{{ ansible_local.openafs.bins['pagsh'] }}"
PTS: "{{ ansible_local.openafs.bins['pts'] }}"
RXDEBUG: "{{ ansible_local.openafs.bins['rxdebug'] }}"
TOKENS: "{{ ansible_local.openafs.bins['tokens'] }}"
UDEBUG: "{{ ansible_local.openafs.bins['udebug'] }}"
UNLOG: "{{ ansible_local.openafs.bins['unlog'] }}"
VOS: "{{ ansible_local.openafs.bins['vos'] }}"

# Kerberos paths
KDESTROY: '{{ afs_kdestroy | d("kdestroy") }}'
KINIT: '{{ afs_kinit | d("kinit") }}'

# Misc paths
PYTHON: "{{ afs_python | d(ansible_python.executable) }}"
{% if afs_gfind is defined -%}
GFIND: "{{ afs_gfind }}"
{% elif ansible_os_family in ('RedHat', 'Debian') -%}
GFIND: "/usr/bin/find"
{% endif -%}
{% endraw -%}
