{% raw -%}
---
- name: Create a Kerberos realm
  hosts: afs_kdcs
  collections:
    - openafs_contrib.openafs
  vars:
    afs_admin_password: "{{ lookup('password', afs_cell_files+'/afs_admin_password chars=ascii_letters,digits,hexdigits length=15') }}"
  tasks:
    - import_role:
        name: openafs_krbserver

    - import_role:
        name: openafs_common

    - name: Create AFS service key.
      become: yes
      openafs_principal:
        state: present
        principal: "afs/{{ afs_cell }}"
        encryption_types:
          - aes128-cts
          - aes256-cts
      register: service_key_results

    - name: Create admin principal.
      become: yes
      openafs_principal:
        state: present
        principal: "{{ afs_admin | replace('.', '/') }}"
        password: "{{ afs_admin_password }}"
        acl: "*"
      register: admin_princ_results

    - name: Create user principal.
      become: yes
      openafs_principal:
        state: present
        principal: "{{ afs_user }}"
      register: user_princ_results

    - name: Download keytabs.
      become: yes
      fetch:
        flat: yes
        src: "{{ item }}"
        dest: "{{ afs_cell_files }}/"
      with_items:
        - "{{ service_key_results.keytab }}"
        - "{{ admin_princ_results.keytab }}"
        - "{{ user_princ_results.keytab }}"
      register: download_results

    - name: Downloaded.
      debug:
        msg: "{{ download_results.results | map(attribute='dest') | list }}"
{%- endraw %}
