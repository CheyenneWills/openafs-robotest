---
- name: Lookup configure options
  set_fact:
    afs_configure_options: "{{ lookup('file', afs_configure_file) | from_yaml }}"
  when:
    - afs_configure_options is undefined
    - afs_configure_file is defined
    - afs_configure_file != ''

- name: Set default configure options (modern style)
  set_fact:
    afs_configure_options:
      enable:
        - debug
        - debug-kernel
        - kernel-module
      with:
        - linux-kernel-packaging
  when:
    - afs_configure_options is undefined
    - afs_bdist_style == 'modern'

- name: Set default configure options (transarc style)
  set_fact:
    afs_configure_options:
      enable:
        - debug
        - debug-kernel
        - kernel-module
        - transarc-paths
      with:
        - linux-kernel-packaging
  when:
    - afs_configure_options is undefined
    - afs_bdist_style == 'transarc'

- debug:
    var: afs_configure_options

- name: Build binary distribution
  openafs_build:
    target: install
    clean: yes
    projectdir: "{{ afs_source }}"
    destdir: "{{ afs_source }}/packaging/dest"
    configure_options: "{{ afs_configure_options }}"
  register: build_results

- debug:
    var: build_results

- set_fact:
    osdist: "{{ ansible_distribution | lower + ansible_distribution_major_version }}"
    arch: "{{ ansible_architecture }}"

- set_fact:
    tarball: "openafs-{{ afs_version }}-{{ osdist }}-{{ arch }}.{{ afs_bdist_name | d('bdist') }}.tar.gz"

- name: Create archive
  archive:
    path: "{{ afs_source }}/packaging/dest/"
    dest: "{{ tarball }}"
    format: gz

- name: Download
  fetch:
    flat: yes
    src: "{{ tarball }}"
    dest: "{{ afs_builds }}/"
  register: fetch_results

- name: Downloaded
  debug:
    msg: "{{ fetch_results.dest }}"
